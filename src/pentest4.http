POST http://localhost:8000/agent/run
Content-Type: application/json

{
  "message": "Using all tools at your displosal, execute these actions, Step 1\nAction: Protect Against Clickjacking Attacks\nUpdate the server to send HTTP headers that block clickjacking by only allowing your own domain to embed content.\nFile to update: ./server.js\n\nStep 2\nAction: Implement a Strong Content Security Policy (CSP)\nSet a detailed CSP header to restrict sources of scripts, styles, fonts, and other content to prevent XSS and injection attacks.\nFile to update: ./server.js\n\nStep 3\nAction: Enable HTTP Strict Transport Security (HSTS)\nEnsure your server sends a Strict-Transport-Security header to enforce HTTPS-only communication.\nFile to update: ./server.js\n\nStep 4\nAction: Remove the Last-Modified Header\nPrevent the server from disclosing timestamps in response headers to reduce information leakage.\nFile to update: ./server.js\n\nStep 5\nAction: Prevent MIME Type Sniffing\nAdd the X-Content-Type-Options: nosniff header to prevent browsers from inferring content types incorrectly.\nFile to update: ./server.js\n\nStep 6\nAction: Hide Server Technology Information\nDisable the Express frameworkâ€™s default X-Powered-By header to avoid revealing server technology.\nFile to update: ./server.js\n\nStep 7\nAction: Block Access to Hidden and Sensitive Dotfiles\nEnsure that files starting with a dot (e.g., .env, .git) are not accessible via HTTP requests.\nFile to update: ./server.js\n\nStep 8\nAction: Control Caching for Static Assets\nAllow caching for static assets (JS, CSS, images) and disable caching for other files to optimize performance and protect sensitive data.\nFile to update: ./server.js\n\nStep 9\nAction: Ensure HTML Pages Are Not Cached\nPrevent browsers from caching HTML files, especially the main index.html, to avoid serving outdated or sensitive content.\nFile to update: ./server.js\n\nStep 10\nAction: Optimize Angular Production Build\nConfigure production build settings for performance and security by setting budgets, enabling optimizations, and applying output hashing.\nFile to update: ./angular.json\n\nStep 11\nAction: Use Environment Variable for Server Port\nMake the server listen on a port defined in environment variables with a default fallback.\nFile to update: ./server.js"
}
